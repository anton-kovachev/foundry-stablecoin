# =================================================================
# FOUNDRY STABLECOIN ENVIRONMENT CONFIGURATION
# =================================================================
# Copy this file to .env and fill in your actual values
# Never commit .env to version control!

# =================================================================
# RPC ENDPOINTS
# =================================================================
# Get free RPC URLs from:
# - Alchemy: https://www.alchemy.com/
# - Infura: https://infura.io/
# - QuickNode: https://www.quicknode.com/

# Local development (Anvil)
ANVIL_RPC_URL=http://localhost:8545

# Ethereum Mainnet
MAINNET_RPC_URL=https://eth-mainnet.alchemyapi.io/v2/YOUR_API_KEY_HERE

# Ethereum Sepolia Testnet
SEPOLIA_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/YOUR_API_KEY_HERE

# Polygon Mumbai Testnet (if needed)
MUMBAI_RPC_URL=https://polygon-mumbai.g.alchemy.com/v2/YOUR_API_KEY_HERE

# =================================================================
# PRIVATE KEYS
# =================================================================
# NEVER use real private keys with funds in .env files!
# Use test accounts only or hardware wallets for production

# For local development (Anvil default account)
ANVIL_PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

# For testnet deployment (create a dedicated test wallet)
# Generate: cast wallet new
PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000

# Alternative: Use mnemonic phrase (more secure)
MNEMONIC="test test test test test test test test test test test junk"

# =================================================================
# API KEYS
# =================================================================

# Etherscan API Key (for contract verification)
# Get from: https://etherscan.io/apis
ETHERSCAN_API_KEY=ABC123ABC123ABC123ABC123ABC123ABC12

# Polygonscan API Key (if deploying to Polygon)
POLYGONSCAN_API_KEY=ABC123ABC123ABC123ABC123ABC123ABC12

# CoinMarketCap API Key (for gas price optimization)
COINMARKETCAP_API_KEY=abcd1234-5678-9012-3456-abcdef123456

# =================================================================
# CHAINLINK ORACLE ADDRESSES
# =================================================================
# These are automatically configured in HelperConfig.s.sol
# But you can override them here if needed

# Ethereum Mainnet Price Feeds
# ETH_USD_PRICE_FEED=0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419
# BTC_USD_PRICE_FEED=0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c

# Sepolia Testnet Price Feeds  
# ETH_USD_PRICE_FEED=0x694AA1769357215DE4FAC081bf1f309aDC325306
# BTC_USD_PRICE_FEED=0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43

# =================================================================
# TOKEN ADDRESSES
# =================================================================
# These are also configured in HelperConfig.s.sol

# Ethereum Mainnet
# WETH_ADDRESS=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
# WBTC_ADDRESS=0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599

# =================================================================
# DEPLOYMENT CONFIGURATION
# =================================================================

# Gas price (in gwei) - adjust based on network conditions
GAS_PRICE=20

# Gas limit for contract deployment
GAS_LIMIT=8000000

# Number of confirmations to wait for deployment
CONFIRMATIONS=3

# =================================================================
# TESTING CONFIGURATION
# =================================================================

# Fork testing (test against mainnet state)
FORK_URL=https://eth-mainnet.alchemyapi.io/v2/YOUR_API_KEY_HERE
FORK_BLOCK_NUMBER=18500000

# Invariant testing parameters
INVARIANT_RUNS=1000
INVARIANT_DEPTH=128

# =================================================================
# SECURITY SETTINGS
# =================================================================

# Enable/disable certain features for testing
ENABLE_CONSOLE_LOG=true
ENABLE_FUZZING=true
ENABLE_INVARIANT_TESTING=true

# =================================================================
# DEVELOPMENT SETTINGS
# =================================================================

# Foundry profile to use
FOUNDRY_PROFILE=default

# Enable optimizer
SOLC_OPTIMIZER=true
SOLC_OPTIMIZER_RUNS=200

# =================================================================
# NOTES AND REMINDERS
# =================================================================

# 1. NEVER commit your actual .env file to git
# 2. Use different private keys for testnet and mainnet
# 3. For production, use hardware wallets or secure key management
# 4. Test thoroughly on testnets before mainnet deployment
# 5. Monitor gas prices before deployment
# 6. Verify contracts on Etherscan after deployment

# =================================================================
# USEFUL COMMANDS
# =================================================================

# Deploy to local:
# forge script script/DeployDSC.s.sol --rpc-url $ANVIL_RPC_URL --private-key $ANVIL_PRIVATE_KEY --broadcast

# Deploy to Sepolia:
# forge script script/DeployDSC.s.sol --rpc-url $SEPOLIA_RPC_URL --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY

# Run tests with gas report:
# forge test --gas-report

# Run invariant tests:
# forge test --match-contract InvariantTest

# Create gas snapshot:
# forge snapshot